{"version":3,"sources":["../../src/plugin/debounce.js"],"names":[],"mappings":";;;;;;;;;;sBAAc,QAAQ;;;;wBAEA,WAAW;;iCACC,sBAAsB;;qBAEzC,UAAS,EAAE,EAAe;MAAb,KAAK,yDAAG,GAAG;;;;AAGrC,MAAI,SAAS,GAAG,IAAI,CAAA;AACpB,MAAI,MAAM,GAAG,EAAE,CAAA;AACf,SAAO,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,UAAA,MAAM,EAAI;;AAEvC,QAAI,CAAE,SAAS,EACb,OAAO,MAAM,CAAA;;AAEf,QAAI,MAAM,CAAC,IAAI,CAAC,UAAA,KAAK;aAAI,CAAE,KAAK,CAAC,SAAS;KAAA,CAAC,EAAE;;AAE3C,eAAS,GAAG,KAAK,CAAA;AACjB,UAAI,MAAM,CAAC,MAAM,EAAE;AACjB,cAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;AAC9B,cAAM,CAAC,MAAM,GAAG,CAAC,CAAA;OAClB;AACD,aAAO,MAAM,CAAA;KACd;;;AAGD,UAAM,CAAC,IAAI,MAAA,CAAX,MAAM,qBAAS,MAAM,EAAC,CAAA;;;;AAItB,WAAO,gBAAM,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,UAAA,MAAM;aAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;KAAA,CAAC,CAAA;GAClE,CAAC,CAAA;CAEH","file":"debounce.js","sourcesContent":["import _ from 'lodash'\n\nimport { Bacon } from 'sigh-core'\nimport { bufferingDebounce } from 'sigh-core/lib/stream'\n\nexport default function(op, delay = 500) {\n  // return bufferingDebounce(op.stream, delay).map(_.flatten)\n\n  var initPhase = true\n  var buffer = []\n  return op.stream.flatMapLatest(events => {\n    // avoid buffering during file watch phase\n    if (! initPhase)\n      return events\n\n    if (events.some(event => ! event.initPhase)) {\n      // glob found end of init phase\n      initPhase = false\n      if (buffer.length) {\n        events = buffer.concat(events)\n        buffer.length = 0\n      }\n      return events\n    }\n\n    // TODO: coalesce events to reflect latest fs state\n    buffer.push(...events)\n\n    // if another event is published then flatMapLatest unsubscribes from\n    // the stream returned previously ensuring the splice doesn't happen.\n    return Bacon.later(delay, buffer).map(buffer => buffer.splice(0))\n  })\n\n}\n"]}