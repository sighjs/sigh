{"version":3,"sources":["../../src/plugin/pipeline.js"],"names":[],"mappings":";;;;;;;;wBAAoB,UAAU;;;;wBACR,WAAW;;sBACnB,QAAQ;;;;iCAEY,sBAAsB;;AAExD,IAAI,gBAAgB,GAAG,GAAG,CAAA;;qBAEX,UAAS,EAAE,EAAoB;oCAAf,aAAa;AAAb,iBAAa;;;MACpC,QAAQ,GAAK,EAAE,CAAf,QAAQ;;AAEd,eAAa,GAAG,aAAa,CAAC,MAAM,CAAC,UAAA,CAAC;WAAI,CAAE,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC;GAAA,CAAC,CAAA;;AAEzE,MAAI,EAAE,CAAC,MAAM,KAAK,QAAQ,CAAC,UAAU,EAAE;AACrC,iBAAa,CAAC,OAAO,CAAC,UAAA,IAAI,EAAI;;AAE5B,cAAQ,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAAE,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAA;KACxD,CAAC,CAAA;GACH;;;;AAID,SAAO,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAA,MAAM,EAAI;AACzC,WAAO,gBAAM,QAAQ,CAAC,oBAAE,MAAM,CAC5B,aAAa,EACb,UAAC,OAAO,EAAE,IAAI,EAAK;AACjB,UAAI,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;AACnC,UAAI,MAAM,EACR,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;AACtB,aAAO,OAAO,CAAA;KACf,EACD,EAAE,CACH,CAAC,CAAC,UAAU,EAAE,CAAA;GAChB,CAAC,CAAA;CACH","file":"pipeline.js","sourcesContent":["import Promise from 'bluebird'\nimport { Bacon } from 'sigh-core'\nimport _ from 'lodash'\n\nimport { bufferingDebounce } from 'sigh-core/lib/stream'\n\nvar DEFAULT_DEBOUNCE = 200\n\nexport default function(op, ...pipelineNames) {\n  var { compiler } = op\n\n  pipelineNames = pipelineNames.filter(p => ! p.hasOwnProperty('activate'))\n\n  if (op.stream !== compiler.initStream) {\n    pipelineNames.forEach(name => {\n      // TODO: avoid forwarding []?\n      compiler.addPipelineInput(name, op.stream.skipErrors())\n    })\n  }\n\n  // during this call the streams may not be set up, wait until the first\n  // \"stream initialisation\" value before merging the pipeline streams.\n  return op.stream.take(1).flatMap(events => {\n    return Bacon.mergeAll(_.reduce(\n      pipelineNames,\n      (streams, name) => {\n        var stream = compiler.streams[name]\n        if (stream)\n          streams.push(stream)\n        return streams\n      },\n      []\n    )).skipErrors()\n  })\n}\n"]}