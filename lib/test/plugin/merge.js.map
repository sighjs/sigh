{"version":3,"sources":["../../../src/test/plugin/merge.js"],"names":[],"mappings":";;;;;;sBAAc,QAAQ;;;;wBACF,UAAU;;;;wBACR,WAAW;;mCAEJ,4BAA4B;;;;8BACvC,wBAAwB;;;;sBACR,UAAU;;AAE5C,QAAQ,CAAC,cAAc,EAAE,YAAM;AAC7B,IAAE,CAAC,iCAAiC,EAAE,YAAM;AAC1C,QAAI,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,UAAA,CAAC;aAAI,oBAAO,UAAA,EAAE;eAAI,gBAAM,QAAQ,CAAC,CAAE,uBAAU,CAAC,CAAC,CAAE,CAAC;OAAA,CAAC;KAAA,CAAC,CAAA;AAChF,QAAI,MAAM,GAAG,EAAE,QAAQ,EAAE,sCAAoB,EAAE,CAAA;;AAE/C,WAAO,8CAAM,MAAM,4BAAK,OAAO,GAAC,CAAC,IAAI,CAAC,UAAA,OAAO,EAAI;AAC/C,UAAI,OAAO,GAAG,CAAC,CAAA;AACf,aAAO,0BAAY,UAAS,OAAO,EAAE,MAAM,EAAE;AAC3C,eAAO,CAAC,OAAO,CAAC,UAAA,MAAM,EAAI;AACxB,YAAE,OAAO,CAAA;AACT,gBAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;AAC7B,gBAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,UAAQ,OAAO,SAAM,CAAA;AAChD,cAAI,OAAO,KAAK,CAAC,EAAE;AACjB,mBAAO,EAAE,CAAA;AACT,mBAAO,gBAAM,MAAM,CAAA;WACpB;SACF,CAAC,CAAA;OACH,CAAC,CAAA;KACH,CAAC,CAAA;GACH,CAAC,CAAA;;AAEF,IAAE,CAAC,qCAAqC,EAAE,YAAM;AAC9C,QAAI,QAAQ,GAAG,sCAAoB,CAAA;AACnC,QAAI,MAAM,GAAG,EAAE,QAAQ,EAAR,QAAQ,EAAE,CAAA;AACzB,QAAI,OAAO,GAAG,CACZ,oBAAO,UAAA,EAAE;aAAI,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;KAAA,CAAC,EAC1C,oBAAO,UAAA,EAAE;aAAI,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;KAAA,CAAC,CAC3C,CAAA;;AAED,WAAO,QAAQ,CAAC,OAAO,CAAC,CAAE,qEAAiB,OAAO,EAAC,CAAE,CAAC,CAAA;GACvD,CAAC,CAAA;;AAEF,IAAE,CAAC,gDAAgD,EAAE,YAAM;AACzD,QAAI,QAAQ,GAAG,sCAAoB,CAAA;AACnC,QAAI,MAAM,GAAG,EAAE,QAAQ,EAAR,QAAQ,EAAE,CAAA;AACzB,QAAI,OAAO,GAAG,CAAE,oBAAO,UAAA,EAAE;aAAI,CAAC;KAAA,CAAC,EAAE,oBAAO,UAAA,EAAE;aAAI,CAAC;KAAA,CAAC,CAAE,CAAA;;AAElD,WAAO,QAAQ,CAAC,OAAO,CAAC,CACtB,qEAAiB,OAAO,EAAC,EACzB,oBAAO,UAAA,EAAE;aAAI,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;KAAA,CAAC,CAC3C,CAAC,CAAA;GACH,CAAC,CAAA;CACH,CAAC,CAAA","file":"merge.js","sourcesContent":["import _ from 'lodash'\nimport Promise from 'bluebird'\nimport { Bacon } from 'sigh-core'\n\nimport PipelineCompiler from '../../lib/PipelineCompiler'\nimport merge from '../../lib/plugin/merge'\nimport { plugin, makeEvent } from './helper'\n\ndescribe('merge plugin', () => {\n  it('combines three streams into one', () => {\n    var streams = [1, 2, 3].map(i => plugin(op => Bacon.constant([ makeEvent(i) ])))\n    var opData = { compiler: new PipelineCompiler }\n\n    return merge(opData, ...streams).then(streams => {\n      var nEvents = 0\n      return new Promise(function(resolve, reject) {\n        streams.onValue(events => {\n          ++nEvents\n          events.length.should.equal(1)\n          events[0].path.should.equal(`file${nEvents}.js`)\n          if (nEvents === 3) {\n            resolve()\n            return Bacon.noMore\n          }\n        })\n      })\n    })\n  })\n\n  it('assigns treeIndex to sub-operations', () => {\n    var compiler = new PipelineCompiler\n    var opData = { compiler }\n    var streams = [\n      plugin(op => op.treeIndex.should.equal(1)),\n      plugin(op => op.treeIndex.should.equal(2))\n    ]\n\n    return compiler.compile([ plugin(merge, ...streams) ])\n  })\n\n  it('increments treeIndex for subsequent operations', () => {\n    var compiler = new PipelineCompiler\n    var opData = { compiler }\n    var streams = [ plugin(op => 1), plugin(op => 2) ]\n\n    return compiler.compile([\n      plugin(merge, ...streams),\n      plugin(op => op.treeIndex.should.equal(3))\n    ])\n  })\n})\n"]}