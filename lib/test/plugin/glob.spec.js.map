{"version":3,"sources":["../../../src/test/plugin/glob.spec.js"],"names":[],"mappings":"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","file":"glob.spec.js","sourcesContent":["import { Bacon, Event } from 'sigh-core'\nimport _ from 'lodash'\nimport Promise from 'bluebird'\nimport fs from 'fs'\n\nvar copy = Promise.promisify(require('fs-extra').copy)\nvar mkTmpDir = Promise.promisify(require('temp').mkdir)\n\nimport glob from '../../plugin/glob'\n\nvar FIXTURE_PATH = 'test/fixtures/simple-project'\nvar FIXTURE_FILES = [\n  FIXTURE_PATH + '/file1.js',\n  FIXTURE_PATH + '/file2.js'\n]\n\ndescribe('glob plugin', () => {\n  var stream = Bacon.constant([])\n\n  it('globs a wildcard', () => {\n    return glob({ stream }, FIXTURE_PATH + '/*.js').toPromise(Promise).then(updates => {\n      updates.length.should.equal(2)\n      _.pluck(updates, 'projectPath').sort().should.eql(FIXTURE_FILES)\n      updates.forEach(file => {\n        file.initPhase.should.be.true\n        file.type.should.equal('add')\n        file.opTreeIndex.should.equal(1)\n      })\n    })\n  })\n\n  it('globs a wildcard and forwards initial input events', () => {\n    var stream = Bacon.constant([new Event({\n      type: 'add',\n      path: 'blah.js',\n      data: 'var blah',\n    })])\n\n    return glob({ stream }, FIXTURE_PATH + '/*.js').toPromise(Promise).then(events => {\n      events.length.should.equal(3)\n\n      var updates = events.slice(1)\n      _.pluck(updates, 'projectPath').sort().should.eql(FIXTURE_FILES)\n      updates.forEach(file => {\n        file.initPhase.should.be.true\n        file.type.should.equal('add')\n        file.opTreeIndex.should.equal(1)\n      })\n    })\n  })\n\n  it('globs a wildcard using the basePath option', () => {\n    var opData = { stream, treeIndex: 4 }\n    return glob(opData, { basePath: FIXTURE_PATH }, '*.js')\n    .toPromise(Promise)\n    .then(updates => {\n      opData.nextTreeIndex.should.equal(5)\n      updates.length.should.equal(2)\n      updates[0].projectPath.should.equal('file1.js')\n      updates[1].projectPath.should.equal('file2.js')\n    })\n  })\n\n  it('globs two wildcards', () => {\n    var opData = { stream, treeIndex: 1 }\n    return glob(opData, FIXTURE_PATH + '/*1.js', FIXTURE_PATH + '/*2.js')\n    .toPromise(Promise)\n    .then(updates => {\n      opData.nextTreeIndex.should.equal(3)\n      updates.length.should.equal(2)\n      _.pluck(updates, 'path').sort().should.eql(FIXTURE_FILES)\n      updates[0].opTreeIndex.should.equal(1)\n      updates[1].opTreeIndex.should.equal(2)\n      updates.forEach(file => { file.type.should.equal('add') })\n    })\n  })\n\n  it('detects changes to two files matching globbed pattern', () => {\n    var tmpPath\n    return mkTmpDir({ dir: 'test/tmp', prefix: 'sigh-glob-test-' }).then(_tmpPath => {\n      tmpPath = _tmpPath\n      return copy(FIXTURE_PATH, tmpPath)\n    })\n    .then(() => {\n      return new Promise(function(resolve) {\n        var nUpdates = 0\n        var files = [ tmpPath + '/file1.js', tmpPath + '/file2.js' ]\n        glob({ stream, watch: true, treeIndex: 4 }, tmpPath + '/*.js')\n        .onValue(updates => {\n          if (++nUpdates === 1) {\n            updates.length.should.equal(2)\n            _.delay(fs.appendFile, 50, files[0], 'var file1line2 = 24;\\n')\n            _.delay(fs.appendFile, 500, files[1], 'var file2line2 = 25;\\n')\n          }\n          else {\n            updates.should.eql([\n              new Event({\n                type: 'change',\n                path: files[nUpdates - 2],\n                initPhase: false,\n                opTreeIndex: 4,\n                createTime: updates[0].createTime\n              }),\n            ])\n            if (nUpdates === 3) {\n              resolve()\n              return Bacon.noMore\n            }\n          }\n        })\n      })\n    })\n  })\n\n  it('forwards subsequent input events along with file change events', () => {\n    var delayedInputEvent = new Event({\n      type: 'add',\n      path: 'blah.js',\n      data: 'var blah',\n    })\n\n    var twoStream = Bacon.mergeAll(\n      stream,\n      Bacon.later(400, [delayedInputEvent])\n    )\n\n    var tmpPath\n    return mkTmpDir({ dir: 'test/tmp', prefix: 'sigh-glob-test-' }).then(_tmpPath => {\n      tmpPath = _tmpPath\n      return copy(FIXTURE_PATH, tmpPath)\n    })\n    .then(() => {\n      return new Promise(function(resolve) {\n        var nUpdates = 0\n        var updateFile = tmpPath + '/file1.js'\n        glob({ stream: twoStream, watch: true, treeIndex: 4 }, tmpPath + '/*.js')\n        .onValue(updates => {\n          if (++nUpdates === 1) {\n            updates.length.should.equal(2)\n            _.delay(fs.appendFile, 50, updateFile, 'var file1line2 = 24;\\n')\n          }\n          else if (nUpdates === 2) {\n            updates.should.eql([\n              new Event({\n                type: 'change',\n                path: updateFile,\n                initPhase: false,\n                opTreeIndex: 4,\n                createTime: updates[0].createTime\n              }),\n            ])\n          }\n          else {\n            updates[0].should.equal(delayedInputEvent)\n            resolve()\n            return Bacon.noMore\n          }\n        })\n      })\n    })\n  })\n\n  it('detects new file', () => {\n    var tmpPath\n    return mkTmpDir({ dir: 'test/tmp', prefix: 'sigh-glob-test-2-' }).then(_tmpPath => {\n      tmpPath = _tmpPath\n      return copy(FIXTURE_PATH, tmpPath)\n    })\n    .then(() => {\n      var addedFile = tmpPath + '/added-file.js'\n      return new Promise(function(resolve) {\n        var nUpdates = 0\n        var files = [ tmpPath + '/file1.js', tmpPath + '/file2.js' ]\n        glob({ stream, watch: true, treeIndex: 4 }, tmpPath + '/*.js')\n        .onValue(updates => {\n          if (++nUpdates === 1) {\n            updates.length.should.equal(2)\n            _.delay(fs.writeFile, 300, addedFile, 'var file3line1 = 33;\\n')\n          }\n          else {\n            updates.should.eql([\n              new Event({\n                type: 'add',\n                path: addedFile,\n                initPhase: false,\n                opTreeIndex: 4,\n                createTime: updates[0].createTime\n              }),\n            ])\n            resolve()\n            return Bacon.noMore\n          }\n        })\n      })\n    })\n  })\n\n  xit('detects file unlink', () => {\n  })\n\n  xit('detects file rename', () => {\n  })\n})\n"]}