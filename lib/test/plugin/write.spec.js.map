{"version":3,"sources":["../../../src/test/plugin/write.spec.js"],"names":[],"mappings":"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","file":"write.spec.js","sourcesContent":["import _ from 'lodash'\nimport { Bacon, Event } from 'sigh-core'\nimport Promise from 'bluebird'\nimport { readFileSync, existsSync } from 'fs'\n\nimport write from '../../plugin/write'\n\nvar TMP_PATH = 'test/tmp/write'\nvar PROJ_PATH = 'subdir/file1.js'\nvar PROJ_PATH_BINARY = 'subdir/file2.bin'\nvar TMP_FILE = TMP_PATH + '/' + PROJ_PATH\n\ndescribe('write plugin', () => {\n  it('writes a single file with no map to output directory with identity map', () => {\n    var data = 'var pump\\n'\n    var stream = Bacon.constant([ new Event({ path: PROJ_PATH, type: 'add', data }) ])\n\n    return write({ stream }, TMP_PATH).toPromise(Promise).then(events => {\n      // console.log('write events %j', events)\n      readFileSync(TMP_FILE).toString()\n      .should.equal(data + '\\n//# sourceMappingURL=file1.js.map')\n\n      readFileSync(TMP_FILE + '.map').toString()\n      .should.equal('{\"version\":3,\"sources\":[\"../../../../subdir/file1.js\"],\"names\":[],\"mappings\":\"AAAA,IAAI\",\"file\":\"file1.js\",\"sourcesContent\":[\"var pump\\\\n\"]}')\n    })\n  })\n\n  it('write a single file containing a basePath', () => {\n    var data = 'var  pumpbaby\\n'\n    var stream = Bacon.constant([\n      new Event({ basePath: 'subdir', path: PROJ_PATH, type: 'add', data })\n    ])\n\n    return write({ stream }, TMP_PATH).toPromise(Promise).then(events => {\n      // subdir stripped from the output path due to basePath\n      var tmpFile = TMP_PATH + '/file1.js'\n\n      readFileSync(tmpFile).toString()\n      .should.equal(data + '\\n//# sourceMappingURL=file1.js.map')\n\n      readFileSync(tmpFile + '.map').toString()\n      .should.equal('{\"version\":3,\"sources\":[\"../../../subdir/file1.js\"],\"names\":[],\"mappings\":\"AAAA,KAAK\",\"file\":\"file1.js\",\"sourcesContent\":[\"var  pumpbaby\\\\n\"]}')\n    })\n  })\n\n  it('write a binary file', () => {\n    var data = new Buffer([0, 1, 2, 3, -1, 5, 6, 7, 0])\n    var stream = Bacon.constant([\n      new Event({ basePath: 'subdir', path: PROJ_PATH_BINARY, type: 'add', data: data.toString('binary'), encoding: 'binary', supportsSourceMap: false })\n    ])\n\n    return write({ stream }, TMP_PATH).toPromise(Promise).then(events => {\n      // subdir stripped from the output path due to basePath\n      var tmpFile = TMP_PATH + '/file2.bin'\n\n      readFileSync(tmpFile).should.eql(data)\n    })\n  })\n\n  it('write a single file then remove it', () => {\n    var data = 'var mew\\n'\n    var stream = Bacon.fromArray([\n      [ new Event({ path: PROJ_PATH, type: 'add', data }) ],\n      [ new Event({ path: PROJ_PATH, type: 'remove', data }) ]\n    ])\n\n    return new Promise(function(resolve, reject) {\n      var nValues = 0\n      var writeStream = write({ stream }, TMP_PATH)\n\n      writeStream.onValue(events => {\n        // console.log('write events %j', events)\n        if (++nValues === 1) {\n          existsSync(TMP_FILE).should.be.ok\n          existsSync(TMP_FILE + '.map').should.be.ok\n        }\n        else {\n          existsSync(TMP_FILE).should.not.be.ok\n          existsSync(TMP_FILE + '.map').should.not.be.ok\n          resolve()\n          return Bacon.noMore\n        }\n      })\n      writeStream.onError(reject)\n    })\n  })\n})\n"]}