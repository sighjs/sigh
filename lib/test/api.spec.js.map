{"version":3,"sources":["../../src/test/api.spec.js"],"names":[],"mappings":"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","file":"api.spec.js","sourcesContent":["import Promise from 'bluebird'\n\nvar copy = Promise.promisify(require('fs-extra').copy)\nvar mkTmpDir = Promise.promisify(require('temp').mkdir)\n\nimport PipelineCompiler from '../PipelineCompiler'\nimport { compileSighfile } from '../api'\nimport rewire from 'rewire'\n\nvar FIXTURE_PATH = 'test/fixtures/sigh-project'\n\ndescribe('loadPipelineDependencies', () => {\n  const pipelinePlugin = require('../plugin/pipeline')\n  const mergePlugin = require('../plugin/merge')\n  const fakePlugin = {}\n\n  const loadPipelineDependencies = rewire('../api').__get__('loadPipelineDependencies')\n\n  const makePluginDesc = (plugin, args = []) => ({ plugin, args })\n\n  const pipelines = {\n    dep1: [ makePluginDesc(fakePlugin, ['1']) ],\n    dep2: [ makePluginDesc(fakePlugin, ['2']) ],\n  }\n\n\n  it('should ignore pipeline activation in first leaf and detect subsequent activation', function() {\n    const runPipelines = {\n      main: [\n        { plugin: pipelinePlugin, args: [{ activate: true }, 'dep2'] },\n        { plugin: pipelinePlugin, args: [{ activate: true }, 'dep1'] }\n      ]\n    }\n\n    const deps = loadPipelineDependencies(runPipelines, pipelines)\n    deps.should.have.property('dep1').and.equal(pipelines.dep1)\n    deps.should.not.have.property('dep2')\n  })\n\n  it('should detect pipeline activation in merge, ignoring activation in first leaf node', function() {\n    const runPipelines = {\n      main: [\n        makePluginDesc(mergePlugin, [\n          { plugin: pipelinePlugin, args: [{ activate: true }, 'dep2'] },\n          { plugin: pipelinePlugin, args: [{ activate: true }, 'dep1'] },\n        ]),\n      ]\n    }\n\n    const deps = loadPipelineDependencies(runPipelines, pipelines)\n    deps.should.have.property('dep1').and.equal(pipelines.dep1)\n    deps.should.not.have.property('dep2')\n  })\n})\n\ndescribe('compileSighFile', () => {\n  it('compile should build working bacon streams from pipelines in Sigh.js file', function() {\n    this.timeout(3000)\n\n    var pathBackup, compiler, tmpPath\n\n    return mkTmpDir({ dir: 'test/tmp', prefix: 'sigh-api-test-' })\n    .then(_tmpPath => {\n      tmpPath = _tmpPath\n      return copy(FIXTURE_PATH, tmpPath)\n    })\n    .then(() => {\n      pathBackup = process.cwd()\n      process.chdir(tmpPath)\n\n      var opts = { environment: 'production' }\n      compiler = new PipelineCompiler(opts)\n      return compileSighfile(compiler, opts)\n    })\n    .then(streams => streams.js.toPromise(Promise))\n    .then(events => {\n      events.length.should.equal(1)\n      var event = events[0]\n      event.path.should.equal('dist/combined.js')\n    })\n    .finally(() => {\n      compiler.destroy()\n      if (pathBackup)\n        process.chdir(pathBackup)\n    })\n  })\n})\n"]}