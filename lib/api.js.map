{"version":3,"sources":["../src/api.js"],"names":[],"mappings":"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","file":"api.js","sourcesContent":["import fs from 'fs'\nimport _ from 'lodash'\nimport Promise from 'bluebird'\nimport rewire from 'rewire'\nimport path from 'path'\nimport functionLimit from 'process-pool/lib/functionLimit'\n\nimport { log, Bacon } from 'sigh-core'\n\nimport PipelineCompiler from './PipelineCompiler'\nimport gulpAdapter from './gulp-adapter'\n\nimport merge from './plugin/merge'\nimport concat from './plugin/concat'\nimport debounce from './plugin/debounce'\nimport env from './plugin/env'\nimport glob from './plugin/glob'\nimport pipeline from './plugin/pipeline'\nimport write from './plugin/write'\nimport filter from './plugin/filter'\n\nvar plugins = {\n  merge, concat, debounce, env, glob, pipeline, write,\n  select: filter.bind(null, true),\n  reject: filter.bind(null, false),\n}\n\n/**\n * Run Sigh.js\n * @return {Promise} Resolves to an object { pipelineName: baconStream }\n */\nexport function invoke(opts = {}) {\n  try {\n    var exitCode = 0\n    var streams\n    var compiler = new PipelineCompiler(opts)\n\n    var startTime = Date.now()\n    var relTime = (time = startTime) => ((Date.now() - time) / 1000).toFixed(3)\n\n    return compileSighfile(compiler, opts)\n    .then(_streams => {\n      streams = _streams\n\n      if (opts.verbose)\n        log('waiting for subprocesses to start')\n      return compiler.procPool.ready()\n    })\n    .then(() => {\n      if (opts.verbose)\n        log('subprocesses started in %s seconds', relTime())\n      var pipeStartTime = Date.now()\n\n      _.forEach(streams, (stream, pipelineName) => {\n        stream.onValue(events => {\n          var now = new Date\n\n          var createTime = _.min(events, 'createTime').createTime\n          var timeDuration = relTime(createTime ? createTime.getTime() : pipeStartTime)\n\n          log('pipeline %s complete: %s seconds', pipelineName, timeDuration)\n          if (opts.verbose > 1) {\n            events.forEach(event => {\n              var { path, projectPath } = event\n              var suffix = path !== projectPath ? ` [${event.projectPath}]` : ''\n              log.nested(`${event.type} ${event.path}${suffix}`)\n            })\n          }\n        })\n\n        stream.onError(error => {\n          exitCode = 1\n          log.warn('\\x07error: pipeline %s', pipelineName)\n          log.warn(error)\n        })\n      })\n\n      Bacon.mergeAll(_.values(streams)).onEnd(() => {\n        if (opts.verbose)\n          log('pipeline(s) complete: %s seconds', relTime())\n        compiler.destroy()\n\n        process.exit(exitCode)\n      })\n    })\n  }\n  catch (e) {\n    if (typeof e === 'function' && e instanceof Error) {\n      log.warn(e.message)\n      process.exit(1)\n    }\n    else {\n      throw e\n    }\n  }\n}\n\n/**\n * Compile the Sigh.js file in the current directory with the given options.\n * @return {Promise} Resolves to an object { pipelineName: baconStream }\n */\nexport function compileSighfile(compiler, opts = {}) {\n  try {\n    var packageJson = JSON.parse(fs.readFileSync('package.json'))\n  }\n  catch (e) {}\n\n  var notPlugin = { 'sigh-cli': true, 'sigh-core' : true }\n\n  if (packageJson) {\n    [ packageJson.devDependencies, packageJson.dependencies ].forEach(deps => {\n      if (! deps)\n        return\n\n      _.forEach(deps, function(version, pkg) {\n        if (notPlugin[pkg])\n          return\n\n        if (/^sigh-/.test(pkg)) {\n          plugins[pkg.substr(5)] = require(path.join(process.cwd(), 'node_modules', pkg))\n        }\n        else if (/^gulp-/.test(pkg)) {\n          var name = pkg.substr(5)\n          if (! plugins[name])\n            plugins[name] = gulpAdapter(require(path.join(process.cwd(), 'node_modules', pkg)))\n        }\n      })\n    })\n  }\n\n  var sighPath\n  try {\n    sighPath = require.resolve(path.join(process.cwd(), 'Sigh'))\n  }\n  catch (e) {\n    sighPath = require.resolve(path.join(process.cwd(), 'sigh'))\n  }\n\n  var sighModule = rewire(sighPath)\n  _.forEach(plugins, (plugin, key) => injectPlugin(sighModule, key))\n\n  var pipelines = { alias: {}, explicit: {} }\n  sighModule(pipelines)\n\n  var selectedPipelines = selectPipelines(opts.pipelines, pipelines)\n  var runPipelines = loadPipelineDependencies(selectedPipelines, pipelines)\n\n  if (opts.verbose) {\n    log(\n      'running pipelines [ %s ] with %s jobs',\n      Object.keys(runPipelines).join(', '),\n      opts.jobs\n    )\n  }\n\n  // to ensure the promises run one after the other so that plugins load\n  // in dependency order, ideally they could be segmented according to\n  // dependencies and loaded in several asynchronous batches.\n  var limiter = functionLimit(func => func(), 1)\n\n  return Promise.props(\n    _.mapValues(runPipelines, (pipeline, name) => limiter(() => {\n      // This ensures that user selected pipeline's input streams are\n      // merged with the init stream.\n      var inputStream = selectedPipelines[name] ? compiler.initStream : null\n      return compiler.compile(pipeline, inputStream, name)\n    }))\n  )\n}\n\n/**\n * Select pipelines, then _.assign(pipelines, pipelines.explicit) ; delete pipelines.explicit\n * @param {Object} pipelines All pipelines by name and two extra keys, alias and explicit.\n *                           After this function returns the explicit pipelines will be\n *                           merged with the main pipelines and then the key will be deleted.\n * @return {Object} Pipeline name against pipeline in the order the user selected them.\n */\nfunction selectPipelines(selected, pipelines) {\n  if (! selected || selected.length === 0)\n    selected = Object.keys(_.omit(pipelines, 'alias', 'explicit'))\n\n  if (! _.isEmpty(pipelines.alias)) {\n    selected = _.flatten(\n      selected.map(pipelineName => {\n        return pipelines.alias[pipelineName] || pipelineName\n      })\n    )\n  }\n\n  _.defaults(pipelines, pipelines.explicit)\n  delete pipelines.explicit\n\n  var runPipelines = {}\n  selected.forEach(name => {\n    runPipelines[name] = pipelines[name]\n  })\n\n  return runPipelines\n}\n\n/**\n * Reverse the order of keys in a hash.\n * Works in any JS VM that maintains key insertion order.\n */\nfunction reverseHash(hash) {\n  var ret = {}\n  Object.keys(hash).reverse().forEach(key => { ret[key] = hash[key] })\n  return ret\n}\n\n/**\n * @arg {Object} runPipelines A map of pipelines the user has chosen to run by name.\n * @arg {Object} pipelines A map of all pipelines by name.\n * @return {Object} A map of pipelines that should be run with dependents after dependencies.\n */\nfunction loadPipelineDependencies(runPipelines, pipelines) {\n  var ret = {}\n  var loading = {}\n\n  var loadDeps = srcPipelines => {\n    _.forEach(srcPipelines, (pipeline, name) => {\n      if (ret.name)\n        return\n      else if (loading.name)\n        throw Error(`circular dependency from pipeline ${name}`)\n\n      loading[name] = true\n\n      // TODO: also cursively scan args, e.g. if used in merge\n      var activations = []\n\n      // ignore pipelines in the first position as they only provide output, not\n      // input and this can be associated dynamically through a flatMap\n      // TODO: if this pipeline itself has input then the above comment no\n      //       longer applies.\n      let skipNextLeaf = true\n\n      const scanPipelineForActivation = pipeline => {\n        pipeline.forEach(pluginMeta => {\n          if (pluginMeta.plugin === plugins.merge) {\n            scanPipelineForActivation(pluginMeta.args)\n            return\n          }\n\n          if (skipNextLeaf) {\n            skipNextLeaf = false\n            return\n          }\n\n          if (pluginMeta.plugin === plugins.pipeline) {\n            var activateState = false\n            pluginMeta.args.forEach(arg => {\n              if (arg.hasOwnProperty('activate'))\n                activateState = arg.activate\n              else if (activateState)\n                activations.push(arg)\n            })\n          }\n        })\n      }\n\n      scanPipelineForActivation(pipeline)\n\n      activations.forEach(activation => {\n        var activationPipeline = pipelines[activation]\n        if (! activationPipeline)\n          throw Error(`invalid pipeline ${activation}`)\n\n        ret[activation] = activationPipeline\n      })\n\n      // this pipeline must come after those it activates so that\n      // the dependency order is preserved after the list is reserved.\n      ret[name] = pipeline\n\n      delete loading[name]\n    })\n  }\n\n\n  loadDeps(reverseHash(runPipelines))\n\n  return reverseHash(ret)\n}\n\nfunction injectPlugin(module, pluginName) {\n  var plugin = plugins[pluginName]\n  if (! plugin)\n    throw new Error(\"Nonexistent plugin `\" + pluginName + \"'\")\n\n  try {\n    var varName = _.camelCase(pluginName)\n\n    module.__set__(varName, (...args) => ({ plugin, args }))\n  }\n  catch (e) {\n    // plugin not used\n  }\n}\n"]}